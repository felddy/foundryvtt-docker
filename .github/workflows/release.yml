---
name: release

on:
  release:
    types: [released]

env:
  IMAGE_NAME: felddy/foundryvtt
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  PLATFORMS: "linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,\
    linux/arm64,linux/ppc64le,linux/s390x"
  RUN_TMATE: ${{ secrets.RUN_TMATE }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Determine image version
        id: get_ver
        run: |
          echo "##[set-output name=version;]$(./bump_version.sh show)"
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3.3.1
        with:
          version: latest
      - name: Log into docker registry
        run: docker login
             --username "$DOCKER_USERNAME"
             --password "$DOCKER_PASSWORD"
      - name: Create cross-platform support Dockerfile-x
        run: ./buildx-dockerfile.sh
      - name: Build Docker images, tag, and publish
        run: |
          IFS='.' read -r v_major v_minor v_patch \
            <<< "${{ steps.get_ver.outputs.version }}"
          docker buildx build \
            --file Dockerfile-x \
            --platform $PLATFORMS \
            --output "type=image,push=true" \
            --tag "$IMAGE_NAME:${{ github.event.release.target_commitish }}" \
            --tag "$IMAGE_NAME:latest" \
            --tag "${IMAGE_NAME}:${{ steps.get_ver.outputs.version }}" \
            --tag "${IMAGE_NAME}:${v_major}.${v_minor}" \
            --tag "${IMAGE_NAME}:${v_major}" \
            --build-arg CREATED_TIMESTAMP="$(date --rfc-3339=seconds)" \
            --build-arg GIT_COMMIT=$(git log -1 --format=%H) \
            --build-arg GIT_REMOTE=$(git remote get-url origin) \
            --build-arg VERSION=${{ steps.get_ver.outputs.version }} \
            .
      - name: Publish README.md to Docker Hub
        run: ./push_readme.sh
      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@v1
        if: env.RUN_TMATE
