---
name: Docker test image

on:
  workflow_call:
    inputs:
      # Required inputs
      artifact_name:
        description: "The artifact name used to store the image archive"
        required: true
        type: string
      # Optional inputs
      buildx_cache_dir:
        description: "The buildx cache directory"
        default: ~/.cache/buildx
        required: false
        type: string
      docker_file:
        description: "The Dockerfile to use"
        default: ./Dockerfile
        required: false
        type: string
      image_labels:
        description: "Image labels to apply to the image"
        required: false
        type: string
      image_tags:
        description: "The tags to apply to the image"
        default: local/test-image:latest
        required: false
        type: string
    secrets:
      artifact_key:
        description: "Enables encryption of the image archive if specified"
        required: false
      build_args:
        description: "Build args to pass to the Dockerfile"
        required: false

env:
  ARTIFACT_WORK_DIR: /tmp/artifact-work

jobs:
  build:
    # Builds a single test image for the native platform.  This image is saved
    # as an artifact and loaded by the test job.
    name: "Build image"
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          # TODO: change to 'egress-policy: block' after couple of runs
          egress-policy: audit
      - name: Checkout
        uses: actions/checkout@3df53dd32d858478710a6127bcd8b9d8b7182e16
      - name: Set up QEMU
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6
      - name: Cache Docker layers
        uses: actions/cache@a7c34adf76222e77931dedbf4a45b2e4648ced19
        env:
          BASE_CACHE_KEY: buildx-${{ runner.os }}-
        with:
          path: ${{ inputs.buildx_cache_dir }}
          key: ${{ env.BASE_CACHE_KEY }}${{ github.sha }}
          restore-keys: |
            ${{ env.BASE_CACHE_KEY }}
      - name: Create directory for image storage
        run: mkdir -p ${{ env.ARTIFACT_WORK_DIR }}
      - name: Build image
        id: docker_build
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        with:
          build-args: ${{ secrets.build_args }}
          cache-from: type=local,src=${{ inputs.buildx_cache_dir }}
          cache-to: type=local,dest=${{ inputs.buildx_cache_dir }}
          context: .
          file: ${{ inputs.docker_file}}
          labels: ${{ inputs.image_labels }}
          outputs: type=docker,dest=${{ env.ARTIFACT_WORK_DIR }}/image.tar
          tags: ${{ inputs.image_tags }}
      - name: Check if artifact key is available
        id: check_artifact_key
        run: |
          if [ -n "${{ secrets.artifact_key }}" ]; then
            echo ::set-output name=do_encryption::true
          else
            echo ::set-output name=do_encryption::false
          fi
      - name: Compress and encrypt image
        if: steps.check_artifact_key.outputs.do_encryption == 'true'
        run: |
          7za a -p${{ secrets.artifact_key }} \
          ${{ env.ARTIFACT_WORK_DIR }}/image.tar.7z \
          ${{ env.ARTIFACT_WORK_DIR }}/image.tar
      - name: Upload encrypted artifacts
        if: steps.check_artifact_key.outputs.do_encryption == 'true'
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ env.ARTIFACT_WORK_DIR }}/image.tar.7z
      - name: Upload unencrypted artifacts
        if: steps.check_artifact_key.outputs.do_encryption == 'false'
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ env.ARTIFACT_WORK_DIR }}/image.tar
